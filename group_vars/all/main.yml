ec2_ssh_key_name:  Andy SSH                      # Name for uploaded SSH key
ec2_ssh_key:       ~/.ssh/id_rsa.pub             # Local path to SSH key
ec2_instance_type: t2.nano                       # Size of EC2 instance to provision
ec2_region:        us-east-1                     # Region to deploy AWS environment
ec2_instance_ami:  ami-039eb499c36219cad         # ID of the AMI used for EC2 instances
ansible_playbook:  playbook.yml                  # Ansible playbook for provisioning EC2 instances
import_archive:    no
secrets_length:    32                            # Number of randomly generated chars in each secret
generate_dh_param: yes
email_size_limit:  102400

# Host bind-mount paths
acme_challenge:    /opt/keys/acme/challenge
dkim_data:         /opt/keys/dkim
mailman_core:      /opt/mailman/core
mailman_postmap:   /opt/mailman/core/var/data
mailman_web_data:  /opt/mailman/web
nginx_conf:        /opt/nginx/conf
nginx_html:        /opt/nginx/html
postfix_data:      /opt/postfix/data
postfix_init:      /opt/postfix/init
postfix_log:       /opt/postfix/log
postgres_data:     /opt/postgres/data
tls_data:          /opt/keys/tls

# Other variables shared with Ansible
mailman_admin:     mailman
mailman_email:     ajaquith@apache.org
mailman_rest_user: restadmin
postgres_user:     postgres
postgres_db:       mailmandb

# The Terraform module 'secrets' auto-generates randomized secrets for each
# item in the 'secrets' map below.
secrets:
  django_secret_key:
    description:   Django secret key.
  mailman_rest_password:
    description:   Mailman REST API password
  hyperkitty_api_key:
    description:   Hyperkitty API key.
  postgres_password:
    description:   PostgresQL password.

# The Terraform module 'instances' auto-generates EC2 instances for each item
# in the 'instances' map below. The keys are assigned to the instances' Node
# tags; the values supply the subnet the instances are placed in. The subnets
# are defined in the environment-specific var files.
instances:
  www:             subnet1
  mail:            subnet2

# The Terraform module 'services' auto-generates ECS tasks and security groups
# for each item in the 'services' map below. A service with 'public' == true
# is reachable from the Internet; otherwise, the ports will only be reachable
# by hosts in private subnets (see the 'subnets' map).
services:
  postgres:
    description:   PostgreSQL (private)
    ecs_service:   yes
    memory:        256
    cpu:           0
    place_on_node: mail
    ports:
      - 5432:5432
    public:        no
    mounts:
      - postgres_data:/var/lib/postgresql/data
  mailman-core:
    description:   Mailman Core REST API (private)
    ecs_service:   yes
    memory:        256
    cpu:           0
    place_on_node: mail
    ports:
      - 8001:8001
    public:        no
    mounts:
      - mailman_core:/opt/mailman
  mailman-web:
    description:   HyperKitty and Postorius REST API (private)
    ecs_service:   yes
    memory:        256
    cpu:           0
    place_on_node: www
    ports:
      - 8000:8000
    public:        no
    mounts:
      - mailman_web_data:/opt/mailman-web-data
  nginx:
    description:   Nginx HTTP/HTTPS (private)
    ecs_service:   yes
    memory:        256
    cpu:           0
    place_on_node: www
    ports:
      - 80:80
      - 443:443
    public:        no
    mounts:
      - acme_challenge:/var/www/acme:ro
      - mailman_web_data:/opt/mailman-web-data:ro
      - nginx_conf:/etc/nginx:ro
      - nginx_html:/usr/share/nginx/html:ro
      - tls_data:/etc/tls:ro
  postfix:
    description:   Postfix MTA (private)
    ecs_service:   yes
    memory:        256
    cpu:           0
    place_on_node: mail
    ports:
      - 587:587
    public:        no
    mounts:
      - postfix_data:/var/spool/postfix
      - postfix_log:/var/log/postfix
      - dkim_data:/etc/opendkim/keys:ro
      - mailman_postmap:/var/data/mailman:ro
      - postfix_init:/docker-init.db:ro
      - tls_data:/etc/tls:ro
