[
  {
    "name": "mailman-web",
    "image": "maxking/mailman-web",
    "memoryReservation": ${service.memory},
    "cpu": ${service.cpu},
    "essential": true,
    "environment": [
      {
        "name": "DATABASE_TYPE",
        "value": "postgres"
      },
      {
        "name": "DJANGO_ALLOWED_HOSTS",
        "value": "www.${public_domain}"
      },
      {
        "name": "HYPERKITTY_URL",
        "value": "http://mailman-web.${private_zone}:8000/hyperkitty/"
      },
      {
        "name": "MAILMAN_ADMIN_EMAIL",
        "value": "${mailman_email}"
      },
      {
        "name": "MAILMAN_ADMIN_USER",
        "value": "${mailman_admin}"
      },
      {
        "name": "MAILMAN_HOST",
        "value": "mailman-core.${private_zone}"
      },
      {
        "name": "MAILMAN_REST_USER",
        "value": "${mailman_rest_user}"
      },
      {
        "name": "MAILMAN_REST_URL",
        "value": "http://mailman-core.${private_zone}:8001"
      },
      {
        "name": "POSTORIUS_TEMPLATE_BASE_URL",
        "value": "http://mailman-web.${private_zone}:8000"
      },
      {
        "name": "SERVE_FROM_DOMAIN",
        "value": "${public_domain}"
      },
      {
        "name": "SMTP_HOST",
        "value": "postfix.${private_zone}"
      },
      {
        "name": "UWSGI_STATIC_MAP",
        "value": "/static=/opt/mailman-web-data/static"
      }
    ],
    "secrets": [
      {
        "name": "DATABASE_URL",
        "valueFrom": "${secrets.postgres_url}"
      },
      {
        "name": "HYPERKITTY_API_KEY",
        "valueFrom": "${secrets.hyperkitty_api_key}"
      },
      {
        "name": "MAILMAN_REST_PASSWORD",
        "valueFrom": "${secrets.mailman_rest_password}"
      },
      {
        "name": "SECRET_KEY",
        "valueFrom": "${secrets.django_secret_key}"
      }
    ],
    "mountPoints": [
      %{ for mount in service.mounts ~}
      {
        "sourceVolume": "${split(":", mount)[0]}",
        "containerPath": "${split(":", mount)[1]}",
        "readOnly": %{ if substr(mount, -3, 3) == ":ro" }true%{ else }false%{ endif }
      }%{ if index(service.mounts, mount) + 1 < length(service.mounts) },%{ endif }
      %{ endfor ~} 
    ],
    "portMappings": [
      %{ for port in service.ports ~}
      {
        "hostPort": ${split(":", port)[0]},
        "containerPort": ${split(":", port)[1]},
        "protocol": "tcp"
      }%{ if index(service.ports, port) + 1 < length(service.ports) },%{ endif }
      %{ endfor ~} 
    ]
  }
]
