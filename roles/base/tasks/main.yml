- name: Install base packages
  apk:
    name: ['busybox-initscripts', 'audit', 'curl', 'git', 'net-tools', 'logrotate']
    state: present

- name: Configure sshd
  template:
    src: sshd_config
    dest: /etc/ssh/
    mode: "u=rw,g=r,o="
  notify: Restart sshd

- name: Enable ntp, cron and syslog
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - chronyd
    - crond
    - syslog

- name: Install and configure mDNS responder (.local hosts only)
  block:
    - name: Install mDNS packages
      apk:
        name: ['avahi', 'dbus']
        state: present
    - name: Configure mDNS
      template:
        src: avahi-daemon.conf
        dest: /etc/avahi/
        mode: "a=r"
      notify: Restart Avahi
    - name: Enable mDNS service
      service:
        name: avahi-daemon
        state: started
        enabled: yes
  when: "inventory_hostname is regex('\\.local$')"

- name: Enable swap memory limits for Docker
  ini_file:
    path: /etc/update-extlinux.conf
    section: null
    state: present
    no_extra_spaces: yes
    option: default_kernel_opts
    value: "console=ttyS0 console=tty0 cgroup_enable=memory swapaccount=1"
  notify: Update extlinux

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname_short }}"
  notify: Reboot host

- name: Install Docker
  apk:
    name: docker
    state: present

- name: Install Docker Python libraries
  pip:
    name: ['docker']

- name: Add Docker remap group 'dremap'
  group: 
    name: dremap
    state: present
    system: yes
  when: is_ec2_environment == false
  notify: Restart Docker

- name: Add Docker remap user 'dremap'
  user: 
    name: dremap
    state: present
    create_home: no
    home:
    shell: /sbin/nologin
    system: yes
  when: is_ec2_environment == false
  notify: Restart Docker

- name: Configure Docker user and group remappings
  template:
    src: "{{ item }}"
    dest: /etc
    mode: "a=r"
  with_items:
    - subuid
    - subgid
  when: is_ec2_environment == false
  notify: Restart Docker

- name: Configure Docker daemon
  template:
    src: daemon.json
    dest: /etc/docker/
    mode: "u=rw,g=r,o=r"
  notify: Restart Docker

- name: Enable Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Force any notified handlers to run now
  meta: flush_handlers
