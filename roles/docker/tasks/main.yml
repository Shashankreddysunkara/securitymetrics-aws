- name: Install Docker
  apk:
    name: docker
    state: present

- name: Install Docker Python libraries
  pip:
    name: ['docker']

- name: "Add Docker remap group '{{ docker_remap_user }}'"
  group: 
    name: "{{ docker_remap_user }}"
    state: present
    system: yes
  when: is_ec2_environment == false
  notify: Restart Docker

- name: "Add Docker remap user '{{ docker_remap_user }}'"
  user: 
    name: "{{ docker_remap_user }}"
    state: present
    create_home: no
    home:
    shell: /sbin/nologin
    system: yes
  when: is_ec2_environment == false
  notify: Restart Docker

- name: Configure Docker user and group remappings
  template:
    src: "{{ item }}"
    dest: /etc
    mode: "a=r"
  with_items:
    - subuid
    - subgid
  when: is_ec2_environment == false
  notify: Restart Docker

- name: "Remap Docker root group '{{ docker_root_user }}' (gid={{ docker_root_uid }})"
  group: 
    name: "{{ docker_root_user }}"
    state: present
    system: yes
    gid: "{{ docker_root_uid }}"
  when: is_ec2_environment == false

- name: "Remap Docker root user '{{ docker_root_user }}' (uid={{ docker_root_uid }})"
  user:
    name: "{{ docker_root_user }}"
    state: present
    create_home: no
    home:
    shell: /sbin/nologin
    group: "{{ docker_root_user }}"
    uid: "{{ docker_root_uid }}"
  when: is_ec2_environment == false

- name: "Remap Docker unprivileged groups (gid={{ docker_root_uid + 100 }}-{{ docker_root_uid + 103 }})"
  group: 
    name: "{{ docker_unpriv_user }}{{ item }}"
    state: present
    system: yes
    gid: "{{ docker_root_uid + item }}"
  with_items:
    - 100
    - 101
    - 102
    - 103
  when: is_ec2_environment == false

- name: "Remap Docker unprivileged users (uid={{ docker_root_uid + 100 }}-{{ docker_root_uid + 103 }})"
  user:
    name: "{{ docker_unpriv_user }}{{ item }}"
    state: present
    create_home: no
    home:
    shell: /sbin/nologin
    group: "{{ docker_unpriv_user }}{{ item }}"
    uid: "{{ docker_root_uid + item }}"
  with_items:
    - 100
    - 101
    - 102
    - 103
  when: is_ec2_environment == false

- name: Configure Docker daemon
  template:
    src: daemon.json
    dest: /etc/docker/
    mode: "u=rw,g=r,o=r"
  notify: Restart Docker

- name: Enable Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Run ECS Agent
  docker_container:
    name: ecs-agent
    image: amazon/amazon-ecs-agent:latest
    state: started
    detach: yes
    restart_policy: on-failure
    restart_retries: 10
    network_mode: host
    env_file: /etc/ecs/ecs.config
    env:
      ECS_LOGFILE=/log/ecs-agent.log
      ECS_DATADIR=/data/
      ECS_ENABLE_TASK_IAM_ROLE=true
      ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/ecs:/log
      - /var/lib/ecs/data:/data
  when: is_ec2_environment == true

- name: Force any notified handlers to run now
  meta: flush_handlers
